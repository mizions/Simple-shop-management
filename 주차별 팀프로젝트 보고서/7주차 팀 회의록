/*

7주차(4회차) 팀 회의 내용 요약



7주차시에는 전 회의에서 결정안 방안에 따라, 소스코드 122번줄까지의 개인 코드 분석 후 간단한 개인 발표시간을 가졌으며
중간발표에 대한 전체적 기틀을 다시 한 번 다잡는 시간을 가졌다.
소스코드 122번 줄까지의 내용은 크게 4가지로, 아래와 같다.


1. class file에 대한 분석

2. class earn에 대한 분석

3. class product에 대한 분석 (eran을 *가상상속 받음)

4. class staffn에 대한 분석 (eran을 *가상상속 받음)



가상상속이란 무엇인가?____________________________________________________


최호준 개인 조사 중_

- 가상 상속(Virtual Inhertiance)이란?
클래스를 virtual로 상속받는 것, 아래 코드에서는 product 클래스와 staff 클래스가 earn 클래스를 상속받고 있으며 
그 다음 챕터에 볼 amount 함수에서는 product 클래스와 staff 클래스를 다중 상속받고 있는데, earn 클래스를 가상 상속하지 않을 경우 
(earn 클래스의 경우 따로 생성자가 정의되어있지 않기 때문에 디폴트 생성자가 생성됨)
earn 클래스의 생성자가 두 번 호출되며, 이하 중복 상속에 따라 메모리가 낭비 될 수 있다. 
즉, amount 클래스가 earn 클래스를 딱 한번만 상속받게 구현해야 하며 그것을 위해서 가상 상속을 사용하는 것.



쉽게 말해 멤버함수 a를 갖는 클래스A를 자식 클래스B,C가 상속받았다고 하면 B와 C는 a를 멤버함수로 가지게 된다.
이때 B와 C를 상속받은 D라는 클래스가 있다고 한다면 멤버함수 a를 두번 상속받게 되는 것이다.
이를 방지할 수 있는 것이 '가상상속'이며 가상상속으로 상속 받을 경우, 위 같은 상황에서 인스턴스가 여러개 생기지 않는다.

김성주, 김보명 조원 또한 개인조사를 해왔지만, 조장은 미리 조사해본바 있기에 가상상속의 개념과 이론을 알고 있었으나, 
조장의 단어숙지 미숙으로 개인 조사 과제를 부여할 당시 '가상함수'를 조사해오라는 과제를 부여하였다. (김보명 조원은 두 가지 다 해왔다.)

'가상함수'는 '가상상속'과는 다른 개념으로, Simple shop management에는 적용되지 않는 개념이지만
기왕 해온 것 버리기는 아까우니 공부하는 차원에서 조사 내용을 삽입만하기로 하였다.



김성주 개인 조사 중 _

(1) 가상 함수(Virtual Function) 정의
: 가상 함수는 기본 클래스(상속되지 않은 클래스) 내에서 선언되어 파생 클래스에 의해 재정의 되는 멤버이다.

포인터 또는 기본클래스에 대한 참조를 사용하여 파생 클래스의 객체를 참조하면 해당 객체에 대해 가상 함수를 호출하고 파생 클래스의 함수를 실행할 수 있다.

주로 실행시간(Runtime)에 함수의 다형성(Polymorphism)을 구현하는데 사용됨.

(가상 함수 선언 규칙)

1. 클래스의 공개(public) 섹션에 선언한다.

2. 가상 함수는 정적(static)일 수 없으며 다른 클래스의 친구(friend) 함수가 될 수도 없다.

3. 가상 함수는 실행시간 다형성을 얻기 위해 기본 클래스의 포인터 또는 참조를 통해 
   접근(access)해야 한다.

4. 가상 함수의 프로토타입(반환형과 매개변수)은 기본 클래스와 파생 클래스에서 동일하다.

5. 클래스는 가상 소멸자를 가질 수 있다. 하지만 가상 생성자를 가질 수 없다.



김보명 개인 조사 중 _

가상 함수(Virtual Function)
가상 함수는 부모 클래스에서 선언되어 자식 클래스에 의해 재정의되는 멤버함수이다.
오버라이딩을 성립할 수 있게 해주어 다형성을 구현하는데 핵심이 된다.
선언 방법: virtual <멤버 함수의 원형>



개인 코드 분석_________________________________

개인 코드 분석은 조원 모두가 동일한 내용으로서 제출하였고 가상상속에 대한 개념을 공부하였기 때문에 별 무리없이 진행되었다.
따라 모두 같은 내용의 주석을 달아 파일형식으로 정리하였으니, 4인의 개인 조사 보고서를 중첩하여 올리는 것은 의미가 없다고 판단하여
개인 코드 분석은 김보명 조원의 분석만 삽입한다.


김보명 개인 조사 보고서 중 _

class earn {  
public:
    double profit;
    void show()
    {
        ifstream x("ooo.txt");    // ifstream: 파일 읽기 기능, x = "ooo.txt"
        if (!x)  // 파일이 열리지 않을 경우?
            cout << "PROFIT = 0 ";
        else {
            x >> profit;  // x의 내용을 profit으로 저장
            cout << "\nTOTAL STARTING PROFIT:  " << profit << endl;   // 읽어온 내용 출력
            x.close();  // file close
        }
    }

};
class product :public virtual earn {  // virtual 상속은 부모의 인스턴스가 하나만 존재하도록 함
public:
    int quan;   // 수량
    char name[20];
    char id[20];
    double percost;   // 1개당 원가
    double persell;   // 1개당 가격
    double cost;   
    double sell;   
    void cal()   // 계산 함수
    {
        cost = percost * quan; // 1개 원가 * 수량
        sell = persell * quan;  // 1개 가격 * 수량
        profit = profit + (sell - cost) * 365;  // 제품 1년 이익
    }
    void file(); // 79번줄에 정의됨
    void get();  // 57번줄 정의됨

};
void product::get()
{
    int s;
    cout << "\nnumber of products produced?\n"; 
    cin >> s;
    for (int i = 0; i < s; i++)
    {
        cout << "\ninput product name: \n";
        cin >> name;
        cout << "\ninput product id: \n";
        cin >> id;
        cout << "\ninput cost price of product: \n";  // 원가
        cin >> percost;
        cout << "\ninput selling price of product: \n";  // 판매 가격
        cin >> persell;
        cout << "\ntotal product quantity: \n";
        cin >> quan;
        cal();     // 44번줄에 정의됨
        file();    // 76번줄에 정의됨
    }

}
void product::file()
{
    char file[20];
    strcpy(file, id);   // id 정보를 file로 복사
    strcat(file, ".txt");   // file 뒤에 ".txt"를 붙임, file = "id.txt"
    ofstream f(file);   // "id.txt"에 아래의 내용 쓰기
    f << "\nproduct name: " << name << "\nproduct id: " << id << "\ncost price of product: " << percost << "\nselling price of product: " 
    << persell << "\nquantity: " << quan << "\n total cost: " << cost << "\nsell: " << sell;
    f.close();  // file close
}


class staff :public virtual earn {
protected:
    double salary;  
    char post[12];   // employee name
    char empid[10];  // employee ID
    int postquan;   // 인원 수
    void cal()   // 계산 함수
    {
        profit = (profit - salary * postquan) * 12;   // 이익에서 직원 월급 뺀 값(1년)
    }
    void getstaff();  //101 번줄에 정의
    void file();  //117번줄 정의
};
void staff::getstaff()
{
    cout << "\ninput salary: \n";   // 월급
    cin >> salary;
    cout << "\ninput number of employees: \n";  // 인원 수
    cin >> postquan;
    for (int i = 0; i < postquan; i++)   // 인원 수만큼 이름, ID 입력 반복
    {
        cout << "input employee name\n";
        cin >> post;
        cout << "\ninput employee ID\n";
        cin >> empid;
        cal();  //94번줄 정의
        file();  //117번줄 정의
    }
}
void staff::file()
{
    char file[20];
    strcpy(file, empid);   // empid 정보를 file로 복사
    strcat(file, ".txt");  // file 문자열 뒤에 ".txt"를 붙임, file = "empid.txt"
    ofstream f(file);   // "empid.txt"에 아래의 내용 쓰기
    f << "\nnumber of working employees: " << postquan << "\nemployee salary: " << salary << "\nemployee name :" << post << "\nemployee id: " << empid;
    f.close();  // file close
}



중간 발표_______________________________

1주차 강의개요시간에 나온 공지에 따르면 8주차 중 중간 발표 시간을 갖게 된다.

발표의 내용이 부실한지 충분한지에 대한 이야기를 조금 나누었고, 현제는 시험기간이며 무리하여 코드를 더 분석할 만큼 발표할 내용이 부족하지는 않은 것으로 판단하였다.

즉 우리조의 중간발표 범위는 7주차까지의 분석(4,5,6,7 4회)을 기반으로 작성될 것이고, 발표는 조장 김수경, ppt는 조원 김성주가 만들기로 하였다.

이상 7주차 보고서 마침

*/
